import React from 'react';
import '../styles/prompt.css';

const Prompt = () => {
    return (
        <div className="container">
            <h1>提示词翻译策略显著影响模型输出效果</h1>
            <p className="suggested-time">建议阅读时间：7分钟</p>
            <h2>文章摘要</h2>
            <p>本文围绕提示词翻译策略对模型输出效果的影响展开。介绍了提示词的概念，指出其设计质量与翻译策略直接决定模型输出质量。阐述主流提示词构造模块，分析提示词需要翻译的原因，列举三种常见处理方式及其问题。还介绍了 Bar - Ilan 大学团队提出的选择性预翻译策略，通过实验评估表明该策略在不同任务和语言中的优势，强调翻译质量的关键作用以及选择性预翻译的风险隔离能力，并给出相关参考资料。</p>
            
            <h2>正文内容</h2>
            <p>提示词（prompt），简单来说，就是我们输入给大语言模型的任务指令。它告诉模型“你要做什么”、“你要怎么做”、“请处理哪段内容”、“输出成什么样”。提示词的设计质量与翻译策略，直接决定了模型输出的质量。</p>

            <p className="highlight">请将以下中文句子翻译成英文：</p>
            <p className="highlight">“我们正在研究提示词的最佳翻译策略。”</p>
            <p>这就是一个提示词。</p>

            <h2>目前主流的提示词构造</h2>
            <p>目前主流的提示词构造通常由以下四个模块组成：</p>
            <div className="image-placeholder">图片</div>

            <h2>提示词为什么需要翻译？</h2>
            <p>在多语言下使用 大模型（LLM） 时，我们可能会遇到一些常见问题：</p>
            <ul>
                <li>模型无法理解指令要求，输出偏频、输出乱、格式错误；</li>
                <li>同一套 prompt 用英文输入效果很好，换成源语后效果差很多</li>
            </ul>
            <p>这是因为：大模型为英语进行较多训练，对非英语prompt的理解程度不等；同时，不同组成部分对任务输出的影响度不一。因此，当提示词不是英文时，如何翻译提示词，成为影响系统表现的重要变量。</p>

            <p>近期，Bar - Ilan大学的研究团队提出了一种提示词策略——选择性预翻译（Selective Pre - translation）。相比将整个提示词翻译成英语或保持原语种，该方法在多语种模型应用中展现出更优性能，尤其是在低资源语言和抽取类任务中表现尤为显著。</p>

            <p>不是把提示词整段翻译成英文，也不是全保留原语言，而是只翻译其中关键模块——这种策略被称为“选择性预翻译”。</p>

            <h2>三种常见的提示词处理方式</h2>
            <p>在非英语语境中，为提升模型的理解能力，研究者们曾采用三类方法：</p>
            <ol>
                <li>完全预翻译（Full Pre - translation）：将整个提示词翻译成英文后再输入模型；</li>
                <li>直接推理（Direct Inference）：提示词保持原语种，直接推送至模型；</li>
                <li>部分翻译（Input - only Translation）：仅翻译输入数据，其余部分保留。</li>
            </ol>
            <p>这些策略各有适用场景，但也暴露出共同问题：对提示词结构缺乏区分，可能引入冗余噪音或信息丢失。</p>

            <h2>提示词的结构模块与翻译选择</h2>
            <p>Bar - Ilan团队提出应从提示词的结构化组成入手，依据任务类型与语种资源状况，决定哪些部分值得翻译。</p>
            <p>研究强调：翻译应围绕“任务理解”而非“语言切换”进行设计，策略性选择可有效减少翻译误差带来的信息偏差。</p>
            <div className="image-placeholder">图二 选择性翻译策略在多语言中带来的性能提升</div>

            <p>团队在 35 种语言与 4 项任务中进行了系统评估，包括：</p>
            <ul>
                <li>问答（QA）</li>
                <li>自然语言推理（NLI）</li>
                <li>命名实体识别（NER）</li>
                <li>摘要生成（Summarization）</li>
            </ul>
            <p>结果表明：</p>
            <ul>
                <li>抽取类任务（如 QA、NER）：保持上下文和示例为源语语言显著提升表现；</li>
                <li>生成类任务（如摘要）：将全部提示内容翻译为英文，并要求英文输出，效果最佳；</li>
                <li>指令语言对模型性能影响不大；</li>
                <li>低资源语言中，输出为英文时表现优于目标语言输出。</li>
            </ul>
            <p>这些发现表明，“选择性翻译”作为一种精细化处理方式，有望替代全翻译或全保留的二元策略，成为跨语言任务中更稳妥的路径。</p>

            <p>值得注意的是：翻译质量对提示词效果的影响极其关键。研究指出：</p>
            <p className="highlight">“低质量的机器翻译对整个任务结果有显著负面影响，尤其是在指令与上下文混杂时。”</p>
            <p>选择性预翻译的另一优势在于——它天然具备风险隔离能力。即使某一模块翻译存在瑕疵，也不会牵连整个提示流程。</p>

            <div className="reference">
                <h2>参考资料</h2>
                <ul>
                    <li><a href="https://arxiv.org/abs/2502.09331">https://arxiv.org/abs/2502.09331</a></li>
                    <li><a href="https://slator.com/which-parts-of-a-prompt-should-be-translated-to-improve-large-language-models/">https://slator.com/which-parts-of-a-prompt-should-be-translated-to-improve-large-language-models/</a></li>
                </ul>
            </div>
        </div>
    );
};

export default Prompt;